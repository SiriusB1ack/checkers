<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AIGame" xml:space="preserve">
    <value>VS CPU</value>
  </data>
  <data name="BlackTurn" xml:space="preserve">
    <value>흑자 - </value>
  </data>
  <data name="BlackWon" xml:space="preserve">
    <value>흑자는 승리했다</value>
  </data>
  <data name="CanNotReturnStep" xml:space="preserve">
    <value>Нельзя отменить ход</value>
  </data>
  <data name="CheckBlack" xml:space="preserve">
    <value>검섹</value>
  </data>
  <data name="CheckIP" xml:space="preserve">
    <value>상대의 IP</value>
  </data>
  <data name="CheckLogOut" xml:space="preserve">
    <value>로그 아웃</value>
  </data>
  <data name="CheckMode" xml:space="preserve">
    <value>선택 게임 모드</value>
  </data>
  <data name="CheckStartGame" xml:space="preserve">
    <value>게임을 시작</value>
  </data>
  <data name="CheckWhite" xml:space="preserve">
    <value>흰섹</value>
  </data>
  <data name="CheckYourCheckers" xml:space="preserve">
    <value>너의 체커:</value>
  </data>
  <data name="ConnectionError" xml:space="preserve">
    <value>Ошибка соединения</value>
  </data>
  <data name="ErrorCanNotMove" xml:space="preserve">
    <value>Сюда ходить нельзя!</value>
  </data>
  <data name="ErrorHasNoMoves" xml:space="preserve">
    <value>이 체커는  걸어가 없다!</value>
  </data>
  <data name="ErrorNotYourCheckers" xml:space="preserve">
    <value>그들의 칼을 걸어!</value>
  </data>
  <data name="ExitToMainMenu" xml:space="preserve">
    <value>주 메뉴로 종료</value>
  </data>
  <data name="GameMenu" xml:space="preserve">
    <value>게임</value>
  </data>
  <data name="GamePlayed" xml:space="preserve">
    <value>Игр сыграно: </value>
  </data>
  <data name="GameWon" xml:space="preserve">
    <value>Игр выиграно: </value>
  </data>
  <data name="ICanNotMove" xml:space="preserve">
    <value>Мне некуда ходить! Сдаюсь!</value>
  </data>
  <data name="LoadGame" xml:space="preserve">
    <value>로드</value>
  </data>
  <data name="LocalGame" xml:space="preserve">
    <value>현지 게임</value>
  </data>
  <data name="LoginButton" xml:space="preserve">
    <value>로그 인</value>
  </data>
  <data name="LoginFailed" xml:space="preserve">
    <value>사용자 이름 또는 비밀번호가 잘못되었습니다</value>
  </data>
  <data name="MenuPlayer" xml:space="preserve">
    <value>플레이어</value>
  </data>
  <data name="MenuStatistics" xml:space="preserve">
    <value>통계</value>
  </data>
  <data name="MustAttack" xml:space="preserve">
    <value>당신은 이길 수있다!</value>
  </data>
  <data name="NewGame" xml:space="preserve">
    <value>새로운 게임을 시작</value>
  </data>
  <data name="OnlineGame" xml:space="preserve">
    <value>멀티 (IP 입력)</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>암호</value>
  </data>
  <data name="Player1Guest" xml:space="preserve">
    <value>손님</value>
  </data>
  <data name="Player2" xml:space="preserve">
    <value>플레이어 2</value>
  </data>
  <data name="ProgressList" xml:space="preserve">
    <value>         게임의 진행</value>
  </data>
  <data name="Quit" xml:space="preserve">
    <value>종료</value>
  </data>
  <data name="RegisterButton" xml:space="preserve">
    <value>회원 가입</value>
  </data>
  <data name="ReturnStep" xml:space="preserve">
    <value>이동을 취소</value>
  </data>
  <data name="SavedGameIsOnline" xml:space="preserve">
    <value>Сохраненная игра - сетевая. Продолжить можно только локально!</value>
  </data>
  <data name="SaveGame" xml:space="preserve">
    <value>저장</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>이름</value>
  </data>
  <data name="WaitYourTurn" xml:space="preserve">
    <value>자신의 차례를 기다립니다</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>다시 오신 것을 환영합니다, </value>
  </data>
  <data name="WhiteTurn" xml:space="preserve">
    <value>흰색 체커  - </value>
  </data>
  <data name="WhiteWon" xml:space="preserve">
    <value>흰색 체커는 승리했다</value>
  </data>
  <data name="RegisterBetter" xml:space="preserve">
    <value>통계를 유지하는 데 도움이됩니다 개인 항목</value>
  </data>
</root>